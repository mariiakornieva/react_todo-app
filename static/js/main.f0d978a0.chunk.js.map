{"version":3,"sources":["context/reducer.js","constants/index.js","context/TodosContext.js","api/index.js","components/NewTodo.jsx","components/TodoItem.jsx","components/TodoList.jsx","components/TodoFooter.jsx","components/UserInfo.jsx","TodoApp.js","index.js"],"names":["actions","todos","type","id","title","todosReducer","action","map","todo","completed","filter","every","FILTERS","TodosContext","React","createContext","DispatchContext","TodosContextProvider","children","useReducer","JSON","parse","localStorage","getItem","dispatch","useEffect","setItem","stringify","Provider","value","defaultProps","request","url","params","fetch","process","then","response","ok","Error","status","statusText","json","data","catch","error","deleteTodo","method","toggleTodo","body","NewTodo","useState","setTodo","useContext","onSubmit","e","userId","preventDefault","trim","newTodo","alert","onChange","target","className","placeholder","TodoItem","newTitle","setNewTitle","editing","setEditing","handleSave","oldTitle","renameTodo","cn","checked","onDoubleClick","onClick","onBlur","onKeyDown","key","TodoList","pathname","useLocation","filteredTodos","useMemo","toggleAllChecked","handleToggleAll","a","Promise","allSettled","results","forEach","result","length","htmlFor","TodoFooter","handleDeleteCompleted","activeCount","completedCount","to","exact","activeClassName","UserInfo","name","TodoApp","user","setUser","getUserTodos","userTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f0d978a0.chunk.js","sourcesContent":["const RESET = 'RESET';\nconst TOGGLE = 'TOGGLE';\nconst TOGGLE_ALL = 'TOGGLE_ALL';\nconst DELETE = 'DELETE';\nconst DELETE_COMPLETED = 'DELETE_COMPLETED ';\nconst ADD_TODO = 'ADD_TODO';\nconst UPDATE_TODO = 'UPDATE_TODO';\n\nexport const actions = {\n  reset: todos => ({ type: RESET, todos }),\n  toggle: id => ({ type: TOGGLE, id }),\n  delete: id => ({ type: DELETE, id }),\n  toggleAll: () => ({ type: TOGGLE_ALL }),\n  deleteCompleted: () => ({ type: DELETE_COMPLETED }),\n  addTodo: (id, title) => ({ type: ADD_TODO, id, title }),\n  updateTodo: (id, title) => ({ type: UPDATE_TODO, id, title }),\n};\n\nexport function todosReducer(todos, action) {\n  switch (action.type) {\n    case RESET:\n      return action.todos.map(todo => ({\n        id: todo.id,\n        title: todo.title,\n        completed: todo.completed,\n      }));\n\n    case TOGGLE:\n      return todos.map((todo) => {\n        if (todo.id !== action.id) {\n          return todo;\n        }\n\n        return {\n          id: action.id,\n          title: todo.title,\n          completed: !todo.completed,\n        };\n      });\n\n    case DELETE:\n      return todos.filter(todo => (\n        todo.id !== action.id\n      ));\n\n    case TOGGLE_ALL:\n      if (todos.every(todo => todo.completed)\n        || todos.every(todo => !todo.completed)\n      ) {\n        return todos.map(({ id, title, completed }) => ({\n          id, title, completed: !completed,\n        }));\n      }\n\n      return todos.map(({ id, title }) => ({\n        id, title, completed: true,\n      }));\n\n    case ADD_TODO:\n      return [\n        ...todos,\n        { id: action.id, title: action.title, completed: false },\n      ];\n\n    case DELETE_COMPLETED:\n      return todos.filter(todo => !todo.completed);\n\n    case UPDATE_TODO:\n      return todos.map((todo) => {\n        if (todo.id !== action.id) {\n          return todo;\n        }\n\n        return {\n          id: action.id,\n          title: action.title,\n          completed: todo.completed,\n        };\n      });\n\n    default:\n      return todos;\n  }\n}\n","export const FILTERS = {\n  all: '/',\n  active: '/active',\n  completed: '/completed',\n};\n\nexport const LOCAL_STORAGE_KEY = 'todos';\nexport const USER_ID = 1189;\n","import React, { useEffect, useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport { todosReducer } from './reducer';\nimport { LOCAL_STORAGE_KEY } from '../constants';\n\nexport const TodosContext = React.createContext([]);\nexport const DispatchContext = React.createContext(() => {});\n\nexport function TodosContextProvider({ children }) {\n  const [todos, dispatch] = useReducer(\n    todosReducer,\n    JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY)) || [],\n  );\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  return (\n    <DispatchContext.Provider value={dispatch}>\n      <TodosContext.Provider value={todos}>\n        {children}\n      </TodosContext.Provider>\n    </DispatchContext.Provider>\n  );\n}\n\nTodosContextProvider.propTypes = {\n  children: PropTypes.node,\n};\n\nTodosContextProvider.defaultProps = {\n  children: null,\n};\n","function request(url, params) {\n  return fetch(`${process.env.REACT_APP_API_URL}${url}`, params)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(\n          `Received response ${response.status}: ${response.statusText}`,\n        );\n      }\n\n      return response.json();\n    })\n    .then(response => response.data)\n    .catch((error) => {\n      throw new Error(`${error} occurred`);\n    });\n}\n\nexport const getUser = userId => request(`/users/${userId}`);\nexport const getTodos = () => request('/todos');\nexport const getUserTodos = userId => request(`/todos?userId=${userId}`);\n\nexport const addTodo = (userId, title) => (\n  request(`/todos`, {\n    method: 'POST',\n    body: JSON.stringify({ userId, title, completed: false }),\n  })\n);\n\nexport const deleteTodo = id => (\n  request(`/todos/${id}`, {\n    method: 'DELETE',\n  })\n);\n\nexport const toggleTodo = (id, completed) => (\n  request(`/todos/${id}`, {\n    method: 'PATCH',\n    body: JSON.stringify({ completed }),\n  })\n);\n\nexport const renameTodo = (id, title) => (\n  request(`/todos/${id}`, {\n    method: 'PATCH',\n    body: JSON.stringify({ title }),\n  })\n);\n","import React, { useContext, useState } from 'react';\nimport { DispatchContext } from '../context/TodosContext';\nimport { actions } from '../context/reducer';\nimport { USER_ID } from '../constants';\nimport { addTodo } from '../api';\n\nexport function NewTodo() {\n  const [todo, setTodo] = useState('');\n  const dispatch = useContext(DispatchContext);\n\n  return (\n    <form\n      onSubmit={(e) => {\n        e.preventDefault();\n        if (todo.trim()) {\n          addTodo(USER_ID, todo.trim())\n            .then((newTodo) => {\n              dispatch(actions.addTodo(newTodo.id, newTodo.title));\n            })\n            .catch(error => alert(error));\n\n          setTodo('');\n        }\n      }}\n    >\n      <input\n        value={todo}\n        onChange={e => setTodo(e.target.value)}\n        type=\"text\"\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n      />\n    </form>\n  );\n}\n","import React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { DispatchContext } from '../context/TodosContext';\nimport { actions } from '../context/reducer';\nimport { deleteTodo, toggleTodo, renameTodo } from '../api';\n\nexport function TodoItem({ id, title, completed }) {\n  const [newTitle, setNewTitle] = useState(title);\n  const [editing, setEditing] = useState(false);\n\n  const dispatch = useContext(DispatchContext);\n\n  const handleSave = () => {\n    if (newTitle !== title) {\n      const oldTitle = title;\n\n      dispatch(actions.updateTodo(id, newTitle));\n      setEditing(false);\n\n      renameTodo(id, newTitle)\n        .catch(() => {\n          dispatch(actions.updateTodo(id, oldTitle));\n          setNewTitle(oldTitle);\n        });\n    }\n  };\n\n  const handleKeyDown = (e) => {\n    switch (e.key) {\n      case 'Enter':\n        handleSave();\n        break;\n\n      case 'Escape':\n        setNewTitle(title);\n        setEditing(false);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleDelete = () => {\n    deleteTodo(id)\n      .then(() => dispatch(actions.delete(id)))\n      .catch(error => alert(`Failed to delete item ${title}; ${error}`));\n  };\n\n  const handleToggle = () => {\n    toggleTodo(id, !completed)\n      .then(() => dispatch(actions.toggle(id)))\n      .catch(error => alert(`Failed to toggle item ${title}; ${error}`));\n  };\n\n  return (\n    <li\n      className={cn({\n        completed, editing,\n      })}\n    >\n      <div\n        className=\"view\"\n      >\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={completed}\n          onChange={handleToggle}\n        />\n        <label\n          onDoubleClick={() => setEditing(true)}\n        >\n          {title}\n        </label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={handleDelete}\n        />\n      </div>\n      <input\n        type=\"text\"\n        className=\"edit\"\n        value={newTitle}\n        onChange={e => setNewTitle(e.target.value)}\n        onBlur={handleSave}\n        onKeyDown={handleKeyDown}\n      />\n    </li>\n  );\n}\n\nTodoItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string,\n  completed: PropTypes.bool,\n};\n\nTodoItem.defaultProps = {\n  title: '',\n  completed: false,\n};\n","import React, { useMemo, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\n\nimport { DispatchContext, TodosContext } from '../context/TodosContext';\nimport { actions } from '../context/reducer';\nimport { toggleTodo } from '../api';\nimport { TodoItem } from './TodoItem';\nimport { FILTERS } from '../constants';\n\nexport function TodoList() {\n  const todos = useContext(TodosContext);\n  const dispatch = useContext(DispatchContext);\n  const { pathname } = useLocation();\n\n  const filteredTodos = useMemo(\n    () => (\n      todos.filter(({ completed }) => {\n        switch (pathname) {\n          case FILTERS.active:\n            return !completed;\n\n          case FILTERS.completed:\n            return completed;\n\n          case FILTERS.all:\n          default:\n            return true;\n        }\n      })\n    )\n    , [todos, pathname],\n  );\n\n  const toggleAllChecked = useMemo(() => (\n    todos.every(({ completed }) => completed)\n  ), [todos]);\n\n  const handleToggleAll = async() => {\n    let results;\n\n    if (toggleAllChecked || todos.every(todo => !todo.completed)) {\n      results = await Promise.allSettled(\n        todos.map(todo => toggleTodo(todo.id, !todo.completed)),\n      );\n    } else {\n      results = await Promise.allSettled(\n        todos.filter(todo => !todo.completed)\n          .map(todo => toggleTodo(todo.id, true)),\n      );\n    }\n\n    results.forEach((result) => {\n      if (result.status === 'fulfilled') {\n        dispatch(actions.toggle(result.value.id));\n      } else {\n        alert(`Failed to toggle item`);\n      }\n    });\n  };\n\n  return (\n    <section className=\"main\">\n      {todos.length > 0 && (\n        <>\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            checked={toggleAllChecked}\n            onChange={handleToggleAll}\n          />\n          <label htmlFor=\"toggle-all\">\n            Mark all as complete\n          </label>\n        </>\n      )}\n\n      <ul className=\"todo-list\">\n        {filteredTodos.map(todo => (\n          <TodoItem key={todo.id} {...todo} />\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n  toggleAllChecked: PropTypes.bool,\n};\n\nTodoList.defaultProps = {\n  todos: [],\n  toggleAllChecked: false,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nexport function TodoFooter({\n  handleDeleteCompleted, activeCount, completedCount,\n}) {\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        {`${activeCount} items left`}\n      </span>\n\n      <ul className=\"filters\">\n        <li>\n          <NavLink\n            to=\"/\"\n            exact\n            activeClassName=\"selected\"\n          >\n            All\n          </NavLink>\n        </li>\n\n        <li>\n          <NavLink\n            to=\"/active\"\n            activeClassName=\"selected\"\n          >\n            Active\n          </NavLink>\n        </li>\n\n        <li>\n          <NavLink\n            to=\"/completed\"\n            activeClassName=\"selected\"\n          >\n            Completed\n          </NavLink>\n        </li>\n      </ul>\n\n      {completedCount > 0 && (\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          onClick={handleDeleteCompleted}\n        >\n          Clear completed\n        </button>\n      )}\n    </footer>\n  );\n}\n\nTodoFooter.propTypes = {\n  handleDeleteCompleted: PropTypes.func.isRequired,\n  activeCount: PropTypes.number,\n  completedCount: PropTypes.number,\n};\n\nTodoFooter.defaultProps = {\n  activeCount: 0,\n  completedCount: 0,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport function UserInfo({ name }) {\n  return (\n    <h2>{name}</h2>\n  );\n}\n\nUserInfo.propTypes = {\n  name: PropTypes.string,\n};\n\nUserInfo.defaultProps = {\n  name: 'user name',\n};\n","import React, { useState, useEffect, useMemo, useContext } from 'react';\n\nimport { DispatchContext, TodosContext } from './context/TodosContext';\nimport { actions } from './context/reducer';\nimport { NewTodo } from './components/NewTodo';\nimport { TodoList } from './components/TodoList';\nimport { TodoFooter } from './components/TodoFooter';\nimport { UserInfo } from './components/UserInfo';\nimport { USER_ID } from './constants';\nimport { getUser, getUserTodos, deleteTodo } from './api';\n\nfunction TodoApp() {\n  const todos = useContext(TodosContext);\n  const dispatch = useContext(DispatchContext);\n  const [user, setUser] = useState({});\n\n  useEffect(() => {\n    getUser(USER_ID)\n      .then(setUser)\n      .catch(error => alert(`Failed to fetch user data; ${error}`));\n\n    getUserTodos(USER_ID)\n      .then(userTodos => dispatch(actions.reset(userTodos)))\n      .catch(error => alert(`Failed to fetch todo list; ${error}`));\n  }, []);\n\n  const [activeCount, completedCount] = useMemo(() => {\n    const completed = todos.filter(todo => todo.completed).length;\n    const active = todos.length - completed;\n\n    return [active, completed];\n  }, [todos]);\n\n  const handleDeleteCompleted = async() => {\n    const results = await Promise.allSettled(\n      todos.filter(todo => todo.completed)\n        .map(todo => deleteTodo(todo.id)),\n    );\n\n    results.forEach((result) => {\n      if (result.status === 'fulfilled') {\n        dispatch(actions.delete(result.value.id));\n      } else {\n        alert(`Failed to delete item`);\n      }\n    });\n  };\n\n  return (\n    <>\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <NewTodo />\n        </header>\n\n        <TodoList />\n\n        {todos.length > 0 && (\n          <TodoFooter\n            activeCount={activeCount}\n            completedCount={completedCount}\n            handleDeleteCompleted={handleDeleteCompleted}\n          />\n        )}\n      </section>\n\n      <UserInfo name={user.name} />\n    </>\n  );\n}\n\nexport default TodoApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport { TodosContextProvider } from './context/TodosContext';\nimport TodoApp from './TodoApp';\n\nReactDOM.render(\n  <HashRouter>\n    <TodosContextProvider>\n      <TodoApp />\n    </TodosContextProvider>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}