{"version":3,"sources":["context/TodosContext.js","reducers/todosReducer.js","api/index.js","constants/index.js","components/TodoItem.jsx","components/TodoList.jsx","components/TodoFooter.jsx","components/NewTodo.jsx","components/UserInfo.jsx","components/TodosContextProvider.jsx","hooks/useUser.js","TodoApp.js","index.js"],"names":["TodosContext","React","createContext","actions","todos","type","id","title","todosReducer","action","map","todo","completed","filter","every","request","url","params","fetch","process","then","response","ok","Error","status","statusText","json","data","catch","error","deleteTodo","method","toggleTodo","body","JSON","stringify","FILTERS","TodoItem","editing","onEdit","dispatch","useContext","useState","newTitle","setNewTitle","textInput","useRef","useEffect","current","focus","handleSave","newTitleTrimmed","trim","oldTitle","renameTodo","handleDelete","alert","className","checked","onChange","onDoubleClick","onClick","value","ref","e","target","onBlur","onKeyDown","key","TodoList","isToggleAllChecked","handleToggleAll","pathname","useLocation","currentEditedItem","setCurrentEditedItem","filteredTodos","useMemo","length","htmlFor","cn","TodoFooter","handleDeleteCompleted","activeCount","completedCount","to","exact","activeClassName","NewTodo","setTodo","onSubmit","userId","preventDefault","newTodo","placeholder","UserInfo","name","TodosContextProvider","children","useReducer","parse","localStorage","getItem","userTodos","setItem","Provider","defaultProps","useUser","user","setUser","TodoApp","a","Promise","allSettled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.15e09f29.chunk.js","sourcesContent":["import React from 'react';\n\nexport const TodosContext = React.createContext(null);\n","const RESET = 'RESET';\nconst TOGGLE = 'TOGGLE';\nconst TOGGLE_ALL = 'TOGGLE_ALL';\nconst DELETE = 'DELETE';\nconst DELETE_COMPLETED = 'DELETE_COMPLETED ';\nconst ADD_TODO = 'ADD_TODO';\nconst UPDATE_TODO = 'UPDATE_TODO';\n\nexport const actions = {\n  reset: todos => ({ type: RESET, todos }),\n  toggle: id => ({ type: TOGGLE, id }),\n  delete: id => ({ type: DELETE, id }),\n  toggleAll: () => ({ type: TOGGLE_ALL }),\n  deleteCompleted: () => ({ type: DELETE_COMPLETED }),\n  addTodo: (id, title) => ({ type: ADD_TODO, id, title }),\n  updateTodo: (id, title) => ({ type: UPDATE_TODO, id, title }),\n};\n\nexport function todosReducer(todos, action) {\n  switch (action.type) {\n    case RESET:\n      return action.todos.map(todo => ({\n        id: todo.id,\n        title: todo.title,\n        completed: todo.completed,\n      }));\n\n    case TOGGLE:\n      return todos.map((todo) => {\n        if (todo.id !== action.id) {\n          return todo;\n        }\n\n        return {\n          id: action.id,\n          title: todo.title,\n          completed: !todo.completed,\n        };\n      });\n\n    case DELETE:\n      return todos.filter(todo => (\n        todo.id !== action.id\n      ));\n\n    case TOGGLE_ALL:\n      if (todos.every(todo => todo.completed)\n        || todos.every(todo => !todo.completed)\n      ) {\n        return todos.map(({ id, title, completed }) => ({\n          id, title, completed: !completed,\n        }));\n      }\n\n      return todos.map(({ id, title }) => ({\n        id, title, completed: true,\n      }));\n\n    case ADD_TODO:\n      return [\n        ...todos,\n        { id: action.id, title: action.title, completed: false },\n      ];\n\n    case DELETE_COMPLETED:\n      return todos.filter(todo => !todo.completed);\n\n    case UPDATE_TODO:\n      return todos.map((todo) => {\n        if (todo.id !== action.id) {\n          return todo;\n        }\n\n        return {\n          id: action.id,\n          title: action.title,\n          completed: todo.completed,\n        };\n      });\n\n    default:\n      return todos;\n  }\n}\n","function request(url, params) {\n  return fetch(`${process.env.REACT_APP_API_URL}${url}`, params)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(\n          `Received response ${response.status}: ${response.statusText}`,\n        );\n      }\n\n      return response.json();\n    })\n    .then(response => response.data)\n    .catch((error) => {\n      throw new Error(`${error} occurred`);\n    });\n}\n\nexport const getUser = userId => request(`/users/${userId}`);\nexport const getTodos = () => request('/todos');\nexport const getUserTodos = userId => request(`/todos?userId=${userId}`);\n\nexport const addTodo = (userId, title) => (\n  request(`/todos`, {\n    method: 'POST',\n    body: JSON.stringify({ userId, title, completed: false }),\n  })\n);\n\nexport const deleteTodo = id => (\n  request(`/todos/${id}`, {\n    method: 'DELETE',\n  })\n);\n\nexport const toggleTodo = (id, completed) => (\n  request(`/todos/${id}`, {\n    method: 'PATCH',\n    body: JSON.stringify({ completed }),\n  })\n);\n\nexport const renameTodo = (id, title) => (\n  request(`/todos/${id}`, {\n    method: 'PATCH',\n    body: JSON.stringify({ title }),\n  })\n);\n","export const FILTERS = {\n  all: '/',\n  active: '/active',\n  completed: '/completed',\n};\n\nexport const LOCAL_STORAGE_KEY = 'todos';\nexport const USER_ID = 1189;\nexport const INVALID_TODO_ID = -1;\n","import React, { useState, useContext, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { TodosContext } from '../context/TodosContext';\nimport { actions } from '../reducers/todosReducer';\nimport { deleteTodo, toggleTodo, renameTodo } from '../api';\nimport { INVALID_TODO_ID } from '../constants';\n\nexport function TodoItem({ id, title, completed, editing, onEdit }) {\n  const { dispatch } = useContext(TodosContext);\n  const [newTitle, setNewTitle] = useState(title);\n  const textInput = useRef(null);\n\n  useEffect(() => {\n    if (editing) {\n      textInput.current.focus();\n    }\n  }, [editing]);\n\n  const handleSave = () => {\n    const newTitleTrimmed = newTitle.trim();\n\n    if (newTitleTrimmed && newTitleTrimmed !== title) {\n      const oldTitle = title;\n\n      dispatch(actions.updateTodo(id, newTitleTrimmed));\n      setNewTitle(newTitleTrimmed);\n\n      renameTodo(id, newTitleTrimmed)\n        .catch(() => {\n          dispatch(actions.updateTodo(id, oldTitle));\n          setNewTitle(oldTitle);\n        });\n    } else if (!newTitleTrimmed) {\n      handleDelete();\n    }\n\n    onEdit(INVALID_TODO_ID);\n  };\n\n  const handleKeyDown = (e) => {\n    switch (e.key) {\n      case 'Enter':\n        handleSave();\n        break;\n\n      case 'Escape':\n        setNewTitle(title);\n        onEdit(INVALID_TODO_ID);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleDelete = () => {\n    dispatch(actions.delete(id));\n    deleteTodo(id)\n      .catch(error => alert(`Failed to delete item ${title}; ${error}`));\n  };\n\n  const handleToggle = () => {\n    dispatch(actions.toggle(id));\n    toggleTodo(id, !completed)\n      .catch(error => alert(`Failed to toggle item ${title}; ${error}`));\n  };\n\n  return (\n    <>\n      <div\n        className=\"view\"\n      >\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={completed}\n          onChange={handleToggle}\n        />\n        <label onDoubleClick={() => onEdit(id)}>\n          {title}\n        </label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={handleDelete}\n        />\n      </div>\n\n      <input\n        type=\"text\"\n        className=\"edit\"\n        value={newTitle}\n        ref={textInput}\n        onChange={e => setNewTitle(e.target.value)}\n        onBlur={handleSave}\n        onKeyDown={handleKeyDown}\n      />\n    </>\n  );\n}\n\nTodoItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string,\n  completed: PropTypes.bool,\n  editing: PropTypes.bool,\n  onEdit: PropTypes.func.isRequired,\n};\n\nTodoItem.defaultProps = {\n  title: '',\n  completed: false,\n  editing: false,\n};\n","import React, { useState, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport cn from 'classnames';\n\nimport { TodoItem } from './TodoItem';\nimport { FILTERS, INVALID_TODO_ID } from '../constants';\n\nexport function TodoList({ todos, isToggleAllChecked, handleToggleAll }) {\n  const { pathname } = useLocation();\n  const [currentEditedItem, setCurrentEditedItem] = useState(INVALID_TODO_ID);\n\n  const filteredTodos = useMemo(\n    () => (\n      todos.filter(({ completed }) => {\n        switch (pathname) {\n          case FILTERS.active:\n            return !completed;\n\n          case FILTERS.completed:\n            return completed;\n\n          case FILTERS.all:\n          default:\n            return true;\n        }\n      })\n    )\n    , [todos, pathname],\n  );\n\n  return (\n    <section className=\"main\">\n      {todos.length > 0 && (\n        <>\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            checked={isToggleAllChecked}\n            onChange={handleToggleAll}\n          />\n          <label htmlFor=\"toggle-all\">\n            Mark all as complete\n          </label>\n        </>\n      )}\n\n      <ul className=\"todo-list\">\n        {filteredTodos.map(todo => (\n          <li\n            key={todo.id}\n            className={cn({\n              completed: todo.completed,\n              editing: currentEditedItem === todo.id,\n            })}\n          >\n            <TodoItem\n              {...todo}\n              editing={currentEditedItem === todo.id}\n              onEdit={setCurrentEditedItem}\n            />\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n  isToggleAllChecked: PropTypes.bool,\n  handleToggleAll: PropTypes.func.isRequired,\n};\n\nTodoList.defaultProps = {\n  todos: [],\n  isToggleAllChecked: false,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nexport function TodoFooter({\n  handleDeleteCompleted, activeCount, completedCount,\n}) {\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        {`${activeCount} items left`}\n      </span>\n\n      <ul className=\"filters\">\n        <li>\n          <NavLink\n            to=\"/\"\n            exact\n            activeClassName=\"selected\"\n          >\n            All\n          </NavLink>\n        </li>\n\n        <li>\n          <NavLink\n            to=\"/active\"\n            activeClassName=\"selected\"\n          >\n            Active\n          </NavLink>\n        </li>\n\n        <li>\n          <NavLink\n            to=\"/completed\"\n            activeClassName=\"selected\"\n          >\n            Completed\n          </NavLink>\n        </li>\n      </ul>\n\n      {completedCount > 0 && (\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          onClick={handleDeleteCompleted}\n        >\n          Clear completed\n        </button>\n      )}\n    </footer>\n  );\n}\n\nTodoFooter.propTypes = {\n  handleDeleteCompleted: PropTypes.func.isRequired,\n  activeCount: PropTypes.number,\n  completedCount: PropTypes.number,\n};\n\nTodoFooter.defaultProps = {\n  activeCount: 0,\n  completedCount: 0,\n};\n","import React, { useContext, useState } from 'react';\nimport { TodosContext } from '../context/TodosContext';\nimport { actions } from '../reducers/todosReducer';\nimport { USER_ID } from '../constants';\nimport { addTodo } from '../api';\n\nexport function NewTodo() {\n  const [todo, setTodo] = useState('');\n  const { dispatch } = useContext(TodosContext);\n\n  return (\n    <form\n      onSubmit={(e) => {\n        e.preventDefault();\n        if (todo.trim()) {\n          addTodo(USER_ID, todo.trim())\n            .then((newTodo) => {\n              dispatch(actions.addTodo(newTodo.id, newTodo.title));\n            })\n            .catch(error => alert(error));\n\n          setTodo('');\n        }\n      }}\n    >\n      <input\n        value={todo}\n        onChange={e => setTodo(e.target.value)}\n        type=\"text\"\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n      />\n    </form>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport function UserInfo({ name }) {\n  return (\n    <h2>{name}</h2>\n  );\n}\n\nUserInfo.propTypes = {\n  name: PropTypes.string,\n};\n\nUserInfo.defaultProps = {\n  name: 'user name',\n};\n","import React, { useEffect, useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport { TodosContext } from '../context/TodosContext';\nimport { todosReducer, actions } from '../reducers/todosReducer';\nimport { LOCAL_STORAGE_KEY, USER_ID } from '../constants';\nimport { getUserTodos } from '../api';\n\nexport function TodosContextProvider({ children }) {\n  const [todos, dispatch] = useReducer(\n    todosReducer,\n    JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY)) || [],\n  );\n\n  useEffect(() => {\n    getUserTodos(USER_ID)\n      .then(userTodos => dispatch(actions.reset(userTodos)))\n      .catch(error => alert(`Failed to fetch todo list; ${error}`));\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  return (\n    <TodosContext.Provider value={{ todos, dispatch }}>\n      {children}\n    </TodosContext.Provider>\n  );\n}\n\nTodosContextProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { getUser } from '../api';\nimport { USER_ID } from '../constants';\n\nexport const useUser = () => {\n  const [user, setUser] = useState({});\n\n  useEffect(() => {\n    getUser(USER_ID)\n      .then(setUser)\n      .catch(error => alert(`Failed to fetch user data; ${error}`));\n  }, []);\n\n  return user;\n};\n","import React, { useMemo, useContext } from 'react';\nimport { TodosContext } from './context/TodosContext';\nimport { actions } from './reducers/todosReducer';\nimport { NewTodo, TodoList, TodoFooter, UserInfo } from './components';\nimport { deleteTodo, toggleTodo } from './api';\nimport { useUser } from './hooks/useUser';\n\nfunction TodoApp() {\n  const { todos, dispatch } = useContext(TodosContext);\n  const user = useUser();\n\n  const [activeCount, completedCount] = useMemo(() => {\n    const completed = todos.filter(todo => todo.completed).length;\n    const active = todos.length - completed;\n\n    return [active, completed];\n  }, [todos]);\n\n  const isToggleAllChecked = useMemo(() => (\n    todos.every(({ completed }) => completed)\n  ), [todos]);\n\n  const handleToggleAll = async() => {\n    dispatch(actions.toggleAll());\n\n    if (isToggleAllChecked || todos.every(todo => !todo.completed)) {\n      await Promise.allSettled(\n        todos.map(todo => toggleTodo(todo.id, !todo.completed)),\n      );\n    } else {\n      await Promise.allSettled(\n        todos.filter(todo => !todo.completed)\n          .map(todo => toggleTodo(todo.id, true)),\n      );\n    }\n  };\n\n  const handleDeleteCompleted = async() => {\n    dispatch(actions.deleteCompleted());\n\n    await Promise.allSettled(\n      todos.filter(todo => todo.completed)\n        .map(todo => deleteTodo(todo.id)),\n    );\n  };\n\n  return (\n    <>\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <NewTodo />\n        </header>\n\n        <TodoList\n          todos={todos}\n          handleToggleAll={handleToggleAll}\n          isToggleAllChecked={isToggleAllChecked}\n        />\n\n        {todos.length > 0 && (\n          <TodoFooter\n            activeCount={activeCount}\n            completedCount={completedCount}\n            handleDeleteCompleted={handleDeleteCompleted}\n          />\n        )}\n      </section>\n\n      <UserInfo name={user.name} />\n    </>\n  );\n}\n\nexport default TodoApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport { TodosContextProvider } from './components';\nimport TodoApp from './TodoApp';\n\nReactDOM.render(\n  <HashRouter>\n    <TodosContextProvider>\n      <TodoApp />\n    </TodosContextProvider>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}